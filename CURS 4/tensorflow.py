# -*- coding: utf-8 -*-
"""tensorflow.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16O_wfKgxK3swkFHM6W3xZTdfolgDC-FK
"""

x = 2
x

import numpy as np
import pandas as pd

np.__version__

pd.__version__

import tensorflow as tf

tf.keras.datasets.mnist

mnist_data = tf.keras.datasets.mnist.load_data()

len(mnist_data)

tf.keras.datasets.mnist.load_data()

len(mnist_data[0][0]), len(mnist_data[0][1]), len(mnist_data[1][0]), len(mnist_data[1][1])

((x_train, y_train), (x_test, y_test)) = tf.keras.datasets.mnist.load_data()

x_train[0]

import matplotlib.pyplot as plt

plt.imshow(x_train[0], cmap="grey");

plt.imshow(x_train[0]);

plt.imshow(x_train[10000], cmap="grey");

model = tf.keras.Sequential()

input_layer = tf.keras.layers.Flatten(input_shape=(28, 28))

model.add(input_layer)

hidden1 = tf.keras.layers.Dense(units=100, activation="relu")

output_layer = tf.keras.layers.Dense(units=10, activation="softmax")

model.add(hidden1)
model.add(output_layer)

model.compile(loss="sparse_categorical_crossentropy", optimizer="adam", metrics=["accuracy"])

model.fit(x_train, y_train)

model.predict(x_test[1].reshape(1, 28, 28))